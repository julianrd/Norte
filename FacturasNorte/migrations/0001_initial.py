# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations
from django.conf import settings


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Administrador',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('nombre', models.CharField(max_length=40)),
                ('dni', models.CharField(max_length=8)),
                ('email', models.EmailField(default=b'', unique=True, max_length=255, blank=True)),
                ('fechaNacimiento', models.DateTimeField(null=True, blank=True)),
                ('domicilio', models.CharField(default=b'', max_length=254, blank=True)),
                ('telefono', models.CharField(default=b'', max_length=254, blank=True)),
                ('nroUsuario', models.OneToOneField(to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Administradores',
                'verbose_name_plural': 'Administradores',
                'permissions': (('view_admin', 'Puede ver administrador'), ('update_admin', 'Puede modificar administrador'), ('add_admin', 'Puede agregar administrador'), ('del_admin', 'Puede eliminar administrador'), ('view_empleado', 'Puede ver empleado'), ('update_empleado', 'Puede modificar empleado'), ('add_empleado', 'Puede agregar empleado'), ('del_empleado', 'Puede eliminar empleado'), ('view_cliente', 'Puede ver cliente'), ('update_cliente', 'Puede modificar cliente'), ('add_cliente', 'Puede agregar cliente'), ('del_cliente', 'Puede eliminar cliente'), ('cambiar_cont_cliente', 'Puede cambiar contrasena de Cliente'), ('cambiar_cont_empleado', 'Puede cambiar contrasena de Cliente'), ('cambiar_cont_admin', 'Puede cambiar contrasena de Cliente')),
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('numero', models.AutoField(serialize=False, primary_key=True, db_column=b'NUMERO')),
                ('nombre', models.CharField(max_length=254, db_column=b'NOMBRE', blank=True)),
                ('domicilio', models.CharField(max_length=254, db_column=b'DOMICILIO', blank=True)),
                ('localidad', models.CharField(max_length=11, db_column=b'LOCALIDAD', blank=True)),
                ('telefono', models.CharField(max_length=254, db_column=b'TELEFONO', blank=True)),
                ('condIva', models.CharField(max_length=18, db_column=b'COND_IVA', blank=True)),
                ('email', models.EmailField(max_length=75, unique=True, null=True, db_column=b'E_MAIL', blank=True)),
                ('tipoDoc', models.CharField(max_length=4, db_column=b'TIPO_DOC', blank=True)),
                ('nroDoc', models.CharField(max_length=13, db_column=b'NRO_DOC', blank=True)),
                ('fechaVtoCuit', models.DateTimeField(null=True, db_column=b'FECHAVTOCUIT', blank=True)),
                ('saldo', models.FloatField(null=True, db_column=b'SALDO', blank=True)),
                ('limiteCredito', models.FloatField(null=True, db_column=b'LIMITE_CREDITO', blank=True)),
                ('interesCredito', models.FloatField(null=True, db_column=b'INTERES_CREDITO', blank=True)),
                ('nroCuenta', models.CharField(max_length=20, db_column=b'NROCUENTA', blank=True)),
                ('bonificacion', models.FloatField(null=True, db_column=b'BONIFICACION', blank=True)),
                ('actividad', models.CharField(max_length=20, db_column=b'ACTIVIDAD', blank=True)),
                ('listaPrecio', models.CharField(max_length=9, db_column=b'LISTA_DE_PRECIO', blank=True)),
                ('compctacte', models.CharField(max_length=20, db_column=b'COMPCTACTE', blank=True)),
                ('formaPagoAsociada', models.SmallIntegerField(null=True, db_column=b'FORMAPAGOASOCIADA', blank=True)),
                ('aplicarRecargo', models.CharField(max_length=1, db_column=b'APLICAR_RECARGO', blank=True)),
                ('fechaAlta', models.DateTimeField(null=True, db_column=b'FECHAALTA', blank=True)),
                ('idCodigoContable', models.FloatField(null=True, db_column=b'IDCODIGOCONTABLE', blank=True)),
                ('telefonoRefencia', models.CharField(max_length=20, db_column=b'TELEFONOREFENCIA', blank=True)),
                ('lugarTrabajo', models.CharField(max_length=30, db_column=b'LUGARTRABAJO', blank=True)),
                ('domicilioLaboral', models.CharField(max_length=30, db_column=b'DOMICILIOLABORAL', blank=True)),
                ('telefonoLaboral', models.CharField(max_length=30, db_column=b'TELEFONOLABORAL', blank=True)),
                ('fechaIngreso', models.DateTimeField(null=True, db_column=b'FECHAINGRESO', blank=True)),
                ('sueldo', models.FloatField(null=True, db_column=b'SUELDO', blank=True)),
                ('estadoCivil', models.CharField(max_length=1, db_column=b'ESTADOCIVIL', blank=True)),
                ('fechaNacimiento', models.DateTimeField(null=True, db_column=b'FECHANACIMIENTO', blank=True)),
                ('comentario', models.CharField(max_length=999, db_column=b'COMENTARIO', blank=True)),
                ('estado', models.CharField(max_length=10, db_column=b'ESTADO', blank=True)),
                ('idVendedor', models.IntegerField(null=True, db_column=b'IDVENDEDOR', blank=True)),
                ('idTipoPrecio', models.IntegerField(null=True, db_column=b'IDTIPOPRECIO', blank=True)),
                ('aplicarRetdgr', models.SmallIntegerField(null=True, db_column=b'APLICARRETDGR', blank=True)),
                ('idGrupo', models.IntegerField(null=True, db_column=b'IDGRUPO', blank=True)),
                ('marca', models.SmallIntegerField(null=True, db_column=b'MARCA', blank=True)),
                ('orden', models.IntegerField(null=True, db_column=b'ORDEN', blank=True)),
                ('telReferencia', models.IntegerField(null=True, db_column=b'TELREFERENCIA', blank=True)),
                ('cpLaboral', models.CharField(max_length=11, db_column=b'CP_LABORAL', blank=True)),
                ('legajo', models.CharField(max_length=19, db_column=b'LEGAJO', blank=True)),
                ('cargo', models.CharField(max_length=19, db_column=b'CARGO', blank=True)),
                ('categoria', models.CharField(max_length=19, db_column=b'CATEGORIA', blank=True)),
                ('idCalle', models.IntegerField(null=True, db_column=b'IDCALLE', blank=True)),
                ('altura', models.CharField(max_length=29, db_column=b'ALTURA', blank=True)),
                ('idBarrio', models.IntegerField(null=True, db_column=b'IDBARRIO', blank=True)),
                ('idEntre1', models.IntegerField(null=True, db_column=b'IDENTRE1', blank=True)),
                ('idEntre2', models.IntegerField(null=True, db_column=b'IDENTRE2', blank=True)),
                ('aplicarBonificacion', models.CharField(max_length=1, db_column=b'APLICARBONIFICACION', blank=True)),
                ('clientePreferencial', models.SmallIntegerField(null=True, db_column=b'CLIENTEPREFERENCIAL', blank=True)),
                ('codClientePreferencial', models.CharField(max_length=20, db_column=b'CODCLIENTEPREFERENCIAL', blank=True)),
                ('puntosAcumulados', models.IntegerField(null=True, db_column=b'PUNTOSACUMULADOS', blank=True)),
                ('recargos', models.FloatField(null=True, db_column=b'RECARGOS', blank=True)),
                ('situacion', models.SmallIntegerField(null=True, db_column=b'SITUACION', blank=True)),
                ('idClasificacion', models.IntegerField(null=True, db_column=b'IDCLASIFICACION', blank=True)),
                ('aplicarCostoOperativo', models.SmallIntegerField(null=True, db_column=b'APLICARCOSTOOPERATIVO', blank=True)),
                ('puestoId', models.CharField(max_length=30, db_column=b'PUESTO_ID', blank=True)),
                ('usuarioId', models.CharField(max_length=20, db_column=b'USUARIO_ID', blank=True)),
                ('fechaUpdate', models.DateTimeField(null=True, db_column=b'FECHA_UPDATE', blank=True)),
                ('noAplicarPromociones', models.SmallIntegerField(null=True, db_column=b'NOAPLICARPROMOCIONES', blank=True)),
                ('diasVencimientoCuentaCorriente', models.SmallIntegerField(null=True, db_column=b'DIASVENCIMIENTOCUENTACORRIENTE', blank=True)),
                ('restringirVentaConSaldosPendientes', models.SmallIntegerField(null=True, db_column=b'RESTRINGIRVENTACONSALDOSPENDIENTES', blank=True)),
                ('userDef_0', models.CharField(max_length=20, null=True, db_column=b'UserDef_0', blank=True)),
                ('userDef_1', models.CharField(max_length=20, null=True, db_column=b'UserDef_1', blank=True)),
                ('userDef_2', models.CharField(max_length=20, null=True, db_column=b'UserDef_2', blank=True)),
                ('userDef_3', models.CharField(max_length=20, null=True, db_column=b'UserDef_3', blank=True)),
                ('userDef_4', models.CharField(max_length=20, null=True, db_column=b'UserDef_4', blank=True)),
                ('userDef_5', models.CharField(max_length=20, null=True, db_column=b'UserDef_5', blank=True)),
                ('idcobrador', models.IntegerField(null=True, db_column=b'IDCobrador', blank=True)),
                ('nroUsuario', models.OneToOneField(to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Clientes',
                'permissions': ('cambiar_cont_cliente', 'Puede cambiar contrasena de Cliente'),
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Empleado',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('nombre', models.CharField(max_length=40)),
                ('dni', models.CharField(max_length=8)),
                ('email', models.EmailField(default=b'', unique=True, max_length=255, blank=True)),
                ('fechaNacimiento', models.DateTimeField(null=True, blank=True)),
                ('domicilio', models.CharField(default=b'', max_length=254, blank=True)),
                ('telefono', models.CharField(default=b'', max_length=254, blank=True)),
                ('nroUsuario', models.OneToOneField(to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Empleados',
                'verbose_name_plural': 'Empleados',
                'permissions': (('view_cliente', 'Puede ver cliente'), ('update_cliente', 'Puede modificar cliente'), ('add_cliente', 'Puede agregar cliente'), ('del_cliente', 'Puede eliminar cliente')),
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Entry',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('title', models.CharField(max_length=200)),
                ('body', models.TextField()),
                ('slug', models.SlugField(unique=True, max_length=200)),
                ('publish', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'Entradas',
                'verbose_name': 'Blog Entry',
                'verbose_name_plural': 'Blog Entries',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('slug', models.SlugField(unique=True, max_length=200)),
            ],
            options={
                'db_table': 'Tags',
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
            },
            bases=(models.Model,),
        ),
        migrations.AddField(
            model_name='entry',
            name='tags',
            field=models.ManyToManyField(to='FacturasNorte.Tag'),
            preserve_default=True,
        ),
    ]
